// Base class
class Vehicle {
    String make;
    String model;
    int year;
    int maximumSpeed;

    // Constructor
    Vehicle(String make, String model, int year, int maximumSpeed) {
        this.make = make;
        this.model = model;
        this.year = year;
        this.maximumSpeed = maximumSpeed;
    }

    // Method to be overridden
    void drive() {
        System.out.println("Vehicle is driving.");
    }

    // Method to display attributes
    void displayInfo() {
        System.out.println("Make: " + make);
        System.out.println("Model: " + model);
        System.out.println("Year: " + year);
        System.out.println("Maximum Speed: " + maximumSpeed + " km/h");
    }
}

// Subclass Car
class Car extends Vehicle {
    Car(String make, String model, int year, int maximumSpeed) {
        super(make, model, year, maximumSpeed);  // Call to base class constructor
    }

    @Override
    void drive() {
        System.out.println(make + " " + model + " Car is driving.");
    }
}

// Subclass Bike
class Bike extends Vehicle {
    Bike(String make, String model, int year, int maximumSpeed) {
        super(make, model, year, maximumSpeed);  // Call to base class constructor
    }

    @Override
    void drive() {
        System.out.println(make + " " + model + " Bike is driving.");
    }
}

// Main class
public class Main {
    public static void main(String[] args) {
        // Create Car object
        Car car = new Car("Toyota", "Camry", 2020, 220);
        System.out.println("Car Details:");
        car.displayInfo();
        car.drive();

        System.out.println();

        // Create Bike object
        Bike bike = new Bike("Yamaha", "R15", 2022, 150);
        System.out.println("Bike Details:");
        bike.displayInfo();
        bike.drive();
    }
}